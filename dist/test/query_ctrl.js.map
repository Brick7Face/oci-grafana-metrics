{"version":3,"sources":["../../src/query_ctrl.js"],"names":["OCIDatasourceQueryCtrl","$scope","$injector","$q","uiSegmentSrv","scope","target","region","compartment","resolution","namespace","window","metric","aggregation","tags","q","dimension","tagSegments","dimCache","removeTagFilterSegment","newSegment","fake","value","i","length","push","newCondition","obj","key","type","operator","newPlusButton","rawQuery","datasource","getNamespaces","then","namespaces","text","metricFindQuery","metrics","aggregations","panelCtrl","refresh","regs","_","clone","regions","getCompartments","item","windows","getDimensions","err","error","message","segment","index","when","mapToSegment","bind","catch","handleQueryError","options","that","optSegments","map","v","dimensions","dims","values","split","unshift","splice","Math","max","newOperator","newFake","cssClass","rebuildTargetTagConditions","tagIndex","each","segment2","condition","QueryCtrl","templateUrl"],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import { QueryCtrl } from 'app/plugins/sdk'\nimport './css/query-editor.css!'\nimport { regions, aggregations, windows } from './constants'\nimport _ from 'lodash'\n\nexport class OCIDatasourceQueryCtrl extends QueryCtrl {\n  constructor ($scope, $injector, $q, uiSegmentSrv) {\n    super($scope, $injector)\n\n    this.scope = $scope\n    this.uiSegmentSrv = uiSegmentSrv\n    this.target.region = this.target.region || 'select region'\n    this.target.compartment = this.target.compartment || 'select compartment'\n    this.target.resolution = this.target.resolution || '1m'\n    this.target.namespace = this.target.namespace || 'select namespace'\n    this.target.window = this.target.window || '1m'\n    this.target.metric = this.target.metric || ''\n    this.target.aggregation = this.target.aggregation || 'mean()'\n    this.target.tags = this.target.tags || []\n    this.q = $q\n\n    this.target.dimension = this.target.dimension || ''\n\n    this.tagSegments = []\n    this.dimCache = {}\n    this.removeTagFilterSegment = uiSegmentSrv.newSegment({\n      fake: true,\n      value: '-- remove tag filter --'\n    })\n\n    for (let i = 0; i < this.target.tags.length; i++) {\n      if (i > 0) {\n        this.tagSegments.push(this.uiSegmentSrv.newCondition(','))\n      }\n      const obj = this.target.tags[i]\n      this.tagSegments.push(this.uiSegmentSrv.newSegment({\n        fake: false,\n        key: obj.key,\n        value: obj.key,\n        type: 'key'\n      }))\n      this.tagSegments.push(this.uiSegmentSrv.newSegment({\n        fake: false,\n        key: obj.operator,\n        type: 'operator',\n        value: obj.operator\n      }))\n      this.tagSegments.push(this.uiSegmentSrv.newSegment({\n        fake: false,\n        key: obj.value,\n        type: 'value',\n        value: obj.value\n      }))\n    }\n    this.tagSegments.push(this.uiSegmentSrv.newPlusButton())\n  }\n\n  toggleEditorMode () {\n    this.target.rawQuery = !this.target.rawQuery\n  }\n\n  getNamespaces () {\n    return this.datasource.getNamespaces(this.target)\n      .then((namespaces) => {\n        namespaces.push({ text: '$namespace', value: '$namespace' })\n        return namespaces\n      })\n  }\n\n  getMetrics () {\n    return this.datasource.metricFindQuery(this.target)\n      .then((metrics) => {\n        metrics.push({ text: '$metric', value: '$metric' })\n        return metrics\n      })\n  }\n\n  getAggregations () {\n    return aggregations\n  }\n\n  onChangeInternal () {\n    this.panelCtrl.refresh() // Asks the panel to refresh data.\n  }\n\n  getRegions () {\n    const regs = _.clone(regions)\n    regs.push('$region')\n    return regs\n  }\n\n  getCompartments () {\n    return this.datasource.getCompartments()\n      .then((item) => {\n        item.push({ text: '$compartment', value: '$compartment' })\n        return item\n      })\n  }\n\n  getWindows () {\n    return windows\n  }\n\n  getDimensions () {\n    return this.datasource.getDimensions(this.target)\n  }\n\n  handleQueryError (err) {\n    this.error = err.message || 'Failed to issue metric query'\n    return []\n  }\n\n  getTagsOrValues (segment, index) {\n    if (segment.type === 'operator') {\n      return this.q.when([])\n    }\n\n    if (segment.type === 'key' || segment.type === 'plus-button') {\n      return this.getDimensions()\n        .then(this.mapToSegment.bind(this))\n        .catch(this.handleQueryError.bind(this))\n    }\n    const key = this.tagSegments[index - 2]\n    const options = this.dimCache[key.value]\n    const that = this\n    const optSegments = options.map(v => that.uiSegmentSrv.newSegment({\n      value: v\n    }))\n    return this.q.when(optSegments)\n  }\n\n  mapToSegment (dimensions) {\n    const dimCache = {}\n    const dims = dimensions.map((v) => {\n      const values = v.text.split('=')\n      const key = values[0]\n      const value = values[1]\n      if (!(key in dimCache)) {\n        dimCache[key] = []\n      }\n      dimCache[key].push(value)\n      return this.uiSegmentSrv.newSegment({\n        value: values[0]\n      })\n    })\n    dims.unshift(this.removeTagFilterSegment)\n    this.dimCache = dimCache\n    return dims\n  }\n\n  tagSegmentUpdated (segment, index) {\n    this.tagSegments[index] = segment\n\n    // handle remove tag condition\n    if (segment.value === this.removeTagFilterSegment.value) {\n      this.tagSegments.splice(index, 3)\n      if (this.tagSegments.length === 0) {\n        this.tagSegments.push(this.uiSegmentSrv.newPlusButton())\n      } else if (this.tagSegments.length > 2) {\n        this.tagSegments.splice(Math.max(index - 1, 0), 1)\n        if (this.tagSegments[this.tagSegments.length - 1].type !== 'plus-button') {\n          this.tagSegments.push(this.uiSegmentSrv.newPlusButton())\n        }\n      }\n    } else {\n      if (segment.type === 'plus-button') {\n        if (index > 2) {\n          this.tagSegments.splice(index, 0, this.uiSegmentSrv.newCondition(','))\n        }\n        this.tagSegments.push(this.uiSegmentSrv.newOperator('='))\n        this.tagSegments.push(this.uiSegmentSrv.newFake('select tag value', 'value', 'query-segment-value'))\n        segment.type = 'key'\n        segment.cssClass = 'query-segment-key'\n      }\n\n      if (index + 1 === this.tagSegments.length) {\n        this.tagSegments.push(this.uiSegmentSrv.newPlusButton())\n      }\n    }\n\n    this.rebuildTargetTagConditions()\n  }\n\n  rebuildTargetTagConditions () {\n    const tags = []\n    let tagIndex = 0\n\n    _.each(this.tagSegments, (segment2, index) => {\n      if (segment2.type === 'key') {\n        if (tags.length === 0) {\n          tags.push({})\n        }\n        tags[tagIndex].key = segment2.value\n      } else if (segment2.type === 'value') {\n        tags[tagIndex].value = segment2.value\n      } else if (segment2.type === 'condition') {\n        tags.push({ condition: segment2.value })\n        tagIndex += 1\n      } else if (segment2.type === 'operator') {\n        tags[tagIndex].operator = segment2.value\n      }\n    })\n\n    this.target.tags = tags\n    this.panelCtrl.refresh()\n  }\n}\n\nOCIDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html'\n"]}